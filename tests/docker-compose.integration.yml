# tests/docker-compose.integration.yml

services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: sentiric-app-test
    # Servis adını hostname olarak ayarlayarak daha stabil hale getiriyoruz.
    hostname: app
    ports:
      - "3128:3128"
      - "8080:8080"
      - "53:53/udp"
    volumes:
      - ../config.toml:/app/config.toml
      - ./rules.test.toml:/app/rules.toml
      - sentiric_certs:/app/.certs
    networks:
      - testnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://app:8080/api/stats"]
      interval: 2s
      timeout: 5s
      retries: 15

  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.tester
    # ARTIK ORKESTRASYON YAPMIYOR, SADECE BEKLİYOR
    # Bu komut, konteynerin biz `exec` ile bağlanana kadar çalışır halde kalmasını sağlar.
    command: tail -f /dev/null
    environment:
      # Ortam değişkenleri exec komutlarında da kullanılabilir, burada kalabilirler
      - http_proxy=http://app:3128
      - https_proxy=http://app:3128
      - no_proxy=app,localhost
    volumes:
      - ../tests:/tests
      - sentiric_certs:/app/.certs:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      app:
        condition: service_healthy
    networks:
      - testnet

networks:
  testnet:

volumes:
  sentiric_certs: