name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/sentiric-traffic-cache

jobs:
  build-and-publish:
    name: Build & Publish Release Assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        
      # --- CLI Binary ---
      - name: Build CLI
        run: cargo build -p sentiric-cli --release
      - name: Package CLI
        run: tar -czvf sentiric-cli-linux-amd64.tar.gz -C target/release sentiric-cli

      # --- Docker Image ---
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # --- Release ---
      - name: Create Release and Upload CLI
        uses: softprops/action-gh-release@v2
        with:
          files: |
            sentiric-cli-linux-amd64.tar.gz

  build-companion:
    name: Build Companion Installer
    needs: build-and-publish
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-1 librsvg2-dev libsoup2.4-1 libjavascriptcoregtk-4.1-0
          # Symlinks artık gerekli olmayabilir, çünkü bağımlılıkları doğrudan belirtiyoruz, ama zararı yok
          cd /usr/lib/x86_64-linux-gnu/pkgconfig
          sudo ln -s webkit2gtk-4.1.pc webkit2gtk-4.0.pc
          sudo ln -s javascriptcoregtk-4.1.pc javascriptcoregtk-4.0.pc

      - name: Install frontend dependencies
        run: npm ci --prefix web
      
      - name: Build frontend
        run: npm run build --prefix web

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "crates/companion"
          releaseId: ${{ needs.build-and-publish.outputs.release_id }}

      - name: Upload Companion Artifact to Release
        uses: softprops/action-gh-release@v2
        with:
          append_body: true
          files: |
            crates/companion/src-tauri/target/release/bundle/dmg/*.dmg
            crates/companion/src-tauri/target/release/bundle/msi/*.msi
            crates-companion/src-tauri/target/release/bundle/deb/*.deb
            crates-companion/src-tauri/target/release/bundle/appimage/*.AppImage