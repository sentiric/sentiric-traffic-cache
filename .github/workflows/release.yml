name: Release

on:
  push:
    tags:
      - 'v[0-9]+.*'

jobs:
  build-release:
    name: Build Cross-Platform Binaries
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install frontend dependencies
        working-directory: ./web
        run: npm ci

      - name: Build frontend
        working-directory: ./web
        run: npm run build

      - name: Install Linux dependencies and create symlinks
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libsoup2.4-dev \
            libjavascriptcoregtk-4.1-dev
          cd /usr/lib/x86_64-linux-gnu/pkgconfig
          sudo ln -s webkit2gtk-4.1.pc webkit2gtk-4.0.pc
          sudo ln -s javascriptcoregtk-4.1.pc javascriptcoregtk-4.0.pc
          cd /usr/lib/x86_64-linux-gnu/
          sudo ln -s libwebkit2gtk-4.1.so libwebkit2gtk-4.0.so
          sudo ln -s libjavascriptcoregtk-4.1.so libjavascriptcoregtk-4.0.so

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "crates/companion"
            
      - name: Upload Artifacts for Publishing
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ matrix.platform }}
          path: crates/companion/src-tauri/target/release/bundle/

  publish-release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build-release
    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
          
      - name: List downloaded files for debugging
        run: ls -R release-artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-artifacts/release-artifacts-macos-latest/dmg/*.dmg
            release-artifacts/release-artifacts-windows-latest/msi/*.msi
            release-artifacts/release-artifacts-ubuntu-latest/deb/*.deb
            release-artifacts/release-artifacts-ubuntu-latest/appimage/*.AppImage