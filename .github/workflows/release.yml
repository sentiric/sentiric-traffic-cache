name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/sentiric-traffic-cache

jobs:
  # --- 1. Release Oluşturma ---
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true 

  # --- 2. Docker İmajı ---
  build-docker:
    name: Build & Push Docker Image
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # --- 3. CLI Binary'leri (Çoklu Platform) ---
  build-cli:
    name: Build CLI (${{ matrix.os }})
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: sentiric-cli
            asset_name: sentiric-cli-linux-amd64.tar.gz
          - os: windows-latest
            target: x8x64-pc-windows-msvc
            artifact_name: sentiric-cli.exe
            asset_name: sentiric-cli-windows-amd64.zip
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: sentiric-cli
            asset_name: sentiric-cli-macos-arm64.tar.gz

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Build CLI
        run: cargo build -p sentiric-cli --release --target ${{ matrix.target }}
      - name: Prepare Package Directory
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cp "target/${{ matrix.target }}/release/${{ matrix.artifact_name }}" dist/
          else
            cp "target/${{ matrix.target }}/release/${{ matrix.artifact_name }}" dist/sentiric-cli
          fi
          cp config.toml dist/
          cp rules.toml dist/
      - name: Create Archive (Unix)
        if: matrix.os != 'windows-latest'
        working-directory: dist
        run: tar -czvf ../${{ matrix.asset_name }} *
      - name: Create Archive (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: dist
        run: 7z a ../${{ matrix.asset_name }} *
      - name: Upload CLI Artifact to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.asset_name }}

  # --- 4. Companion Masaüstü Uygulamaları ---
  build-companion:
    name: Build Companion (${{ matrix.platform }})
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-1 librsvg2-dev libsoup2.4-1 libjavascriptcoregtk-4.1-0 libsoup2.4-dev
          # HATA DÜZELTMESİ: Eksik olan ve uyumluluk için gereken sembolik linkleri geri ekliyoruz.
          cd /usr/lib/x86_64-linux-gnu/pkgconfig
          sudo ln -s webkit2gtk-4.1.pc webkit2gtk-4.0.pc
          sudo ln -s javascriptcoregtk-4.1.pc javascriptcoregtk-4.0.pc

      - name: Install frontend dependencies
        run: npm ci --prefix web
      - name: Build frontend
        run: npm run build --prefix web

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "crates/companion"
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: ${{ matrix.platform == 'macos-latest' && '--target aarch64-apple-darwin' || '' }}

      - name: Upload Companion Artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            crates/companion/src-tauri/target/release/bundle/dmg/*.dmg
            crates/companion/src-tauri/target/release/bundle/msi/*.msi
            crates/companion/src-tauri/target/release/bundle/deb/*.deb
            crates/companion/src-tauri/target/release/bundle/appimage/*.AppImage
            crates/companion/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg